/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mathe
 */
public class fmNavegar extends javax.swing.JInternalFrame {

    /**
     * Creates new form fmNavegar
     */
    
    
    public fmNavegar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();
        txtNome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        btExcluir3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtMecanico = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMecanico = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        btExcluir2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPecas = new javax.swing.JTable();
        txtPecas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btExcluir = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Jpanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtServico = new javax.swing.JTable();
        txtServico = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        btExcluir1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Navegar");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jtCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Data de Nascimento", "Cpf", "Sexo", "Telefone", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtCliente);

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Digite o cliente para pesquisar:");

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar.png"))); // NOI18N
        jButton7.setText("Cancelar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btExcluir3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btExcluir3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/lixo.png"))); // NOI18N
        btExcluir3.setText("Excluir");
        btExcluir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addComponent(txtNome)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btExcluir3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(btExcluir3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clientes", jPanel1);

        txtMecanico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMecanicoActionPerformed(evt);
            }
        });
        txtMecanico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMecanicoKeyTyped(evt);
            }
        });

        jtMecanico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Cpf", "Salário", "Data Nascimento", "Sexo", "Endereço", "Telefone", "Setor", "Habidade 1", "Habidade 2", "Habidade 3", "Habidade 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtMecanico);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Digite o mecânico para pesquisar:");

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar.png"))); // NOI18N
        jButton6.setText("Cancelar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btExcluir2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btExcluir2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/lixo.png"))); // NOI18N
        btExcluir2.setText("Excluir");
        btExcluir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtMecanico)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btExcluir2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMecanico, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(btExcluir2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Funcionário", jPanel2);

        jtPecas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Código", "Preço", "Setor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtPecas);

        txtPecas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPecasActionPerformed(evt);
            }
        });
        txtPecas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPecasKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Digite a peça para pesquisar:");

        btExcluir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/lixo.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar.png"))); // NOI18N
        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addComponent(txtPecas)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPecas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(btExcluir))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Peças", jPanel3);

        jtServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Mecânico", "Situação", "Automovel", "Peças", "Data Entrega", "Serviço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtServico);

        txtServico.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtServico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtServicoKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Digite o cliente para pesquisar:");

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar.png"))); // NOI18N
        jButton5.setText("Cancelar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btExcluir1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/lixo.png"))); // NOI18N
        btExcluir1.setText("Excluir");
        btExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Jpanel9Layout = new javax.swing.GroupLayout(Jpanel9);
        Jpanel9.setLayout(Jpanel9Layout);
        Jpanel9Layout.setHorizontalGroup(
            Jpanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
            .addComponent(txtServico)
            .addGroup(Jpanel9Layout.createSequentialGroup()
                .addGroup(Jpanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(Jpanel9Layout.createSequentialGroup()
                        .addComponent(btExcluir1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Jpanel9Layout.setVerticalGroup(
            Jpanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Jpanel9Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServico, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Jpanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(btExcluir1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Serviços", Jpanel9);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/saida.png"))); // NOI18N
        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/lupa.png"))); // NOI18N
        jLabel1.setText("Consultas e exclusões");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Digite a peça para pesquisar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(461, 461, 461)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(443, 443, 443)
                    .addComponent(jLabel5)
                    .addContainerGap(444, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jButton1)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(256, 256, 256)
                    .addComponent(jLabel5)
                    .addContainerGap(287, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        // Realiza a pesquisa de cliente automaticamente ao digitar
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from cliente ";
            if(!txtNome.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtNome.getText().equals(""))
            stmt.setString(1, "%"+txtNome.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtCliente.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdCliente"), rs.getString("Nome"),
                    rs.getString("data_nascimento"),rs.getString("cpf"),rs.getString("sexo"),
                    rs.getString("telefone"),rs.getString("endereco")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
        
        
    }//GEN-LAST:event_txtNomeKeyTyped

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
        // Carregar todos os dados do BD ao abrir a janela
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from cliente ";
            if(!txtNome.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtNome.getText().equals(""))
            stmt.setString(1, "%"+txtNome.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtCliente.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdCliente"), rs.getString("Nome"),
                    rs.getString("data_nascimento"),rs.getString("cpf"),rs.getString("sexo"),
                    rs.getString("telefone"),rs.getString("endereco")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
        
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from mecanico ";
            if(!txtMecanico.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtMecanico.getText().equals(""))
            stmt.setString(1, "%"+txtMecanico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtMecanico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdMecanico"), rs.getString("nome"),
                    rs.getString("cpf"),rs.getString("salario"),rs.getString("data_nascimento"),
                    rs.getString("sexo"),rs.getString("endereco"),rs.getString("telefone"),
                    rs.getString("setor"),rs.getString("especialidade1"),rs.getString("especialidade2")
                    ,rs.getString("especialidade3"),rs.getString("especialidade4")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
        
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from pecas ";
            if(!txtPecas.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtPecas.getText().equals(""))
            stmt.setString(1, "%"+txtPecas.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtPecas.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdPecas"), rs.getString("Nome"),
                    rs.getString("codigo"),rs.getString("preco"),rs.getString("setor")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        } 

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from servico ";
            if(!txtServico.getText().equals(""))
            sql = sql + " where Cliente LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtServico.getText().equals(""))
            stmt.setString(1, "%"+txtServico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtServico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdServico"), rs.getString("cliente"),
                    rs.getString("mecanico"),rs.getString("situacao"),
                    rs.getString("automovel"),rs.getString("pecas"),
                    rs.getString("data_entrega"),rs.getString("servico")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }         
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtMecanicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMecanicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMecanicoActionPerformed

    private void txtMecanicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMecanicoKeyTyped
        
        // Realiza a pesquisa de funcionario automaticamente ao digitar
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from mecanico ";
            if(!txtMecanico.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtMecanico.getText().equals(""))
            stmt.setString(1, "%"+txtMecanico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtMecanico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdMecanico"), rs.getString("nome"),
                    rs.getString("cpf"),rs.getString("salario"),rs.getString("data_nascimento"),
                    rs.getString("sexo"),rs.getString("endereco"),rs.getString("telefone"),
                    rs.getString("setor"),rs.getString("especialidade1"),rs.getString("especialidade2")
                    ,rs.getString("especialidade3"),rs.getString("especialidade4")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_txtMecanicoKeyTyped

    private void txtPecasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPecasKeyTyped
        
        // Realiza a pesquisa de peças automaticamente ao digitar
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from pecas ";
            if(!txtPecas.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtPecas.getText().equals(""))
            stmt.setString(1, "%"+txtPecas.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtPecas.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdPecas"), rs.getString("Nome"),
                    rs.getString("codigo"),rs.getString("preco"),rs.getString("setor")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }        
        
    }//GEN-LAST:event_txtPecasKeyTyped

    private void txtServicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServicoKeyTyped
        
        // Realiza a pesquisa de serviço automaticamente ao digitar
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from servico ";
            if(!txtServico.getText().equals(""))
            sql = sql + " where cliente LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtServico.getText().equals(""))
            stmt.setString(1, "%"+txtServico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtServico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdServico"), rs.getString("cliente"),
                    rs.getString("mecanico"),rs.getString("situacao"),
                    rs.getString("automovel"),rs.getString("pecas"),
                    rs.getString("data_entrega"),rs.getString("servico")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }         
        
    }//GEN-LAST:event_txtServicoKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Botão fechar
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        
        // Excluir dados pela linha selecionada
        try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");  
            String sql = "delete from pecas where idPecas = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            int linha = this.jtPecas.getSelectedRow();
            stmt.setInt(1, Integer.parseInt(jtPecas.getValueAt(linha, 0).toString()));
            stmt.execute();
            stmt.close();
            con.close();
            DefaultTableModel model = (DefaultTableModel) jtPecas.getModel();
            model.removeRow(linha);
            JOptionPane.showMessageDialog(this, "Peca excluída com Sucesso!");
            this.setClosable(true);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }        
        
    }//GEN-LAST:event_btExcluirActionPerformed

    private void txtPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPecasActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPecasActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        //Limpar e carregar o BD
        txtPecas.setText("");
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from pecas ";
            if(!txtPecas.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtPecas.getText().equals(""))
            stmt.setString(1, "%"+txtPecas.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtPecas.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdPecas"), rs.getString("Nome"),
                    rs.getString("codigo"),rs.getString("preco"),rs.getString("setor")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        //Limpar e carregar o BD
        txtServico.setText("");
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from servico ";
            if(!txtServico.getText().equals(""))
            sql = sql + " where Cliente LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtServico.getText().equals(""))
            stmt.setString(1, "%"+txtServico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtServico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdServico"), rs.getString("cliente"),
                    rs.getString("mecanico"),rs.getString("situacao"),
                    rs.getString("automovel"),rs.getString("pecas"),
                    rs.getString("data_entrega")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir1ActionPerformed
        
        // Excluir dados pela linha selecionada        
        try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");  
            String sql = "delete from servico where idServico = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            int linha = this.jtServico.getSelectedRow();
            stmt.setInt(1, Integer.parseInt(jtServico.getValueAt(linha, 0).toString()));
            stmt.execute();
            stmt.close();
            con.close();
            DefaultTableModel model = (DefaultTableModel) jtServico.getModel();
            model.removeRow(linha);
            JOptionPane.showMessageDialog(this, "Serviço excluído com Sucesso!");
            this.setClosable(true);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }        
    }//GEN-LAST:event_btExcluir1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        //Limpar e carregar o BD
        txtMecanico.setText("");
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from mecanico ";
            if(!txtMecanico.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtMecanico.getText().equals(""))
            stmt.setString(1, "%"+txtMecanico.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtMecanico.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdMecanico"), rs.getString("nome"),
                    rs.getString("cpf"),rs.getString("salario"),rs.getString("data_nascimento"),
                    rs.getString("sexo"),rs.getString("endereco"),rs.getString("telefone"),
                    rs.getString("setor"),rs.getString("especialidade1"),rs.getString("especialidade2")
                    ,rs.getString("especialidade3"),rs.getString("especialidade4")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btExcluir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir2ActionPerformed
        
        // Excluir dados pela linha selecionada
        try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");  
            String sql = "delete from mecanico where idMecanico = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            int linha = this.jtMecanico.getSelectedRow();
            stmt.setInt(1, Integer.parseInt(jtMecanico.getValueAt(linha, 0).toString()));
            stmt.execute();
            stmt.close();
            con.close();
            DefaultTableModel model = (DefaultTableModel) jtMecanico.getModel();
            model.removeRow(linha);
            JOptionPane.showMessageDialog(this, "Mecanico excluído com Sucesso!");
            this.setClosable(true);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }    
        
    }//GEN-LAST:event_btExcluir2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        //Limpar e carregar o BD
        txtNome.setText("");
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");
            String sql = "select * from cliente ";
            if(!txtNome.getText().equals(""))
            sql = sql + " where Nome LIKE ? ";
            PreparedStatement stmt = con.prepareStatement(sql);
            if(!txtNome.getText().equals(""))
            stmt.setString(1, "%"+txtNome.getText()+"%");
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jtCliente.getModel();
            model.setNumRows(0);
            while(rs.next()){
                String[] linha = {rs.getString("IdCliente"), rs.getString("Nome"),
                    rs.getString("data_nascimento"),rs.getString("cpf"),rs.getString("sexo"),
                    rs.getString("telefone"),rs.getString("endereco")};
                model.addRow(linha);
            }

            stmt.close();
            con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btExcluir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir3ActionPerformed
        
        // Excluir dados pela linha selecionada
         try{
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/dboficina","root","");  
            String sql = "delete from cliente where idCliente = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            int linha = this.jtCliente.getSelectedRow();
            stmt.setInt(1, Integer.parseInt(jtCliente.getValueAt(linha, 0).toString()));
            stmt.execute();
            stmt.close();
            con.close();
            DefaultTableModel model = (DefaultTableModel) jtCliente.getModel();
            model.removeRow(linha);
            JOptionPane.showMessageDialog(this, "Cliente excluído com Sucesso!");
            this.setClosable(true);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }        
        
    }//GEN-LAST:event_btExcluir3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Jpanel9;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btExcluir1;
    private javax.swing.JButton btExcluir2;
    private javax.swing.JButton btExcluir3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTable jtMecanico;
    private javax.swing.JTable jtPecas;
    private javax.swing.JTable jtServico;
    private javax.swing.JTextField txtMecanico;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPecas;
    private javax.swing.JTextField txtServico;
    // End of variables declaration//GEN-END:variables
}
